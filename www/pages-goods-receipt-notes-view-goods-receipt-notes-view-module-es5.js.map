{"version":3,"sources":["webpack:///src/pages/goods-receipt-notes-view/goods-receipt-notes-view.page.html","webpack:///src/pages/goods-receipt-notes-view/goods-receipt-notes-view-routing.module.ts","webpack:///src/pages/goods-receipt-notes-view/goods-receipt-notes-view.module.ts","webpack:///src/pages/goods-receipt-notes-view/goods-receipt-notes-view.page.scss","webpack:///src/pages/goods-receipt-notes-view/goods-receipt-notes-view.page.ts"],"names":["routes","path","component","GoodsReceiptNotesViewPageRoutingModule","imports","forChild","exports","GoodsReceiptNotesViewPageModule","declarations","GoodsReceiptNotesViewPage","route","goodsreceiptnotes","httpService","grn","items","map","item","showMore","id","snapshot","params","getGrnId","url","get","then","console","log","error","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,sCAAsC;AAAA;AAAA,KAAnD;;AAAaA,0CAAsC,6DAJlD,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIkD,GAAtCH,sCAAsC,CAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKb,QAAaI,+BAA+B;AAAA;AAAA,KAA5C;;AAAaA,mCAA+B,6DAV3C,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAKP,+GALO,CADD;AAQRI,kBAAY,EAAE,CAAC,wFAAD;AARN,KAAT,CAU2C,GAA/BD,+BAA+B,CAA/B;;;;;;;;;;;;;;;;ACrBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaE,yBAAyB;AAKpC,yCAAoBC,KAApB,EAAmDC,iBAAnD,EAAqGC,WAArG,EAA+H;AAAA;;AAA3G,aAAAF,KAAA,GAAAA,KAAA;AAA+B,aAAAC,iBAAA,GAAAA,iBAAA;AAAkD,aAAAC,WAAA,GAAAA,WAAA;AAJrG,aAAAC,GAAA,GAAW,EAAX;AACA,aAAAC,KAAA,GAAa,EAAb;AAIE,aAAKA,KAAL,GAAa,KAAKA,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI;AAAA,iBAAK,MAAD,OAAC,CAAD,kBAC/BA,IAD+B,CAAC,EAC5B;AACPC,oBAAQ,EAAE;AADH,WAD4B,CAAL;AAAA,SAAnB,CAAb;AAIA;;AAVkC;AAAA;AAAA,mCAYzB;AACT;AACA,cAAMC,EAAE,GAAG,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAX,CAFS,CAGT;AACA;AACA;;AACA,eAAKC,QAAL,CAAcH,EAAd;AACD;AAnBmC;AAAA;AAAA,iCAoBrBA,EApBqB,EAoBjB;;;;;;;;;AACXI,uB,GAAM,iCAAiCJ,E;;AAC7C,2BAAM,KAAKN,WAAL,CAAiBW,GAAjB,CAAqBD,GAArB,EACHE,IADG,CACE,UAACX,GAAD,EAAS;AACb,0BAAIA,GAAJ,EAAS;AACP,6BAAI,CAACA,GAAL,GAAWA,GAAG,CAAC,CAAD,CAAd;AACA,6BAAI,CAACC,KAAL,GAAaD,GAAG,CAAC,CAAD,CAAH,CAAOC,KAApB;AACAW,+BAAO,CAACC,GAAR,CAAY,KAAI,CAACb,GAAjB;AACD;AACF,qBAPG,WAQG,UAACc,KAAD,EAAW;AAChBF,6BAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACD,qBAVG,CAAN;;;;;;;;;AAWD;AAjCmC;;AAAA;AAAA,OAAtC;;;;cAK6B;;cAA2C;;cAA4C;;;;AALvGlB,6BAAyB,6DALrC,gEAAU;AACTmB,cAAQ,EAAE,8BADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kIAFS;;;;AAAA,KAAV,CAKqC,GAAzBpB,yBAAyB,CAAzB","file":"pages-goods-receipt-notes-view-goods-receipt-notes-view-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar class=\\\"primaryDark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button text=\\\"\\\" routerLink=\\\"/goods-receipt-notes\\\" icon=\\\"chevron-back-outline\\\">\\r\\n      </ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"titleHeader\\\">\\r\\n      <ion-text class=\\\"titleText\\\">GRN</ion-text>\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n\\r\\n<ion-content>\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>\\r\\n        {{grn.poNumber}}\\r\\n          </ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-card-header>\\r\\n          <ion-card-subtitle>\\r\\n            <ion-icon name=\\\"today-outline\\\" item-start color=\\\"primary\\\"></ion-icon>&nbsp;{{grn.invoiceDate}}\\r\\n          </ion-card-subtitle>\\r\\n        </ion-card-header>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-item color=\\\"primary\\\">\\r\\n          <ion-label>\\r\\n           {{grn.customerName}}\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-item color=\\\"secondary\\\">\\r\\n          <ion-label>\\r\\n            <ion-icon name=\\\"cart-outline\\\"> </ion-icon>&nbsp;{{grn.supplierName}}\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-label>InvoiceNumber: {{grn.invoiceNumber}}</ion-label>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-label>Bill to Customer Code: {{grn.customerCode}}</ion-label>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row></ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-label>Total NetAmount: {{grn.totalNetAmount}}</ion-label>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-label>Total GrossAmount: {{grn.totalGrossAmount}}</ion-label>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-label>Total TaxAmount: {{grn.totalTaxAmount}}</ion-label>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  <ion-grid>\\r\\n    <ion-card class=\\\"card card-md\\\" *ngFor=\\\"let item of grn.items; let i=index;\\\">\\r\\n      <ion-card-content class=\\\"card-content card-content-md\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col class='my-thin-col'>{{i+1}}.</ion-col>\\r\\n            <ion-col>Item Code</ion-col>\\r\\n            <ion-col>Item Name</ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>\\r\\n              {{item.itemCode}}\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              {{item.itemName}}\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>Order Quantity</ion-col>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>{{item.purchaseQuantity}}</ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>Batch No.</ion-col>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>{{item.batchNumber}}</ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>ExpiryDate</ion-col>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>{{item.expiryDate}}</ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>Rate</ion-col>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>{{item.rate}}</ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>Net</ion-col>\\r\\n            <ion-col class='my-thin-col'></ion-col>\\r\\n            <ion-col>{{item.netAmount}}</ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col></ion-col>\\r\\n            <ion-col></ion-col>\\r\\n            <ion-col></ion-col>\\r\\n            <ion-col>\\r\\n              <a (click)=\\\"item.showMore = !item.showMore\\\">Show <span [innerHtml]=\\\"item.showMore ? 'less' : 'More'\\\">  </span></a>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <div *ngIf=item.showMore>\\r\\n            <ion-row>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col> FreeQuantity</ion-col>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col>{{item.freeQuantity}}</ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col>GrossAmount</ion-col>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col>{{item.grossAmount}}</ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col>TaxAmount</ion-col>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col>{{item.taxAmount}}</ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col>TaxPercentage</ion-col>\\r\\n              <ion-col class='my-thin-col'></ion-col>\\r\\n              <ion-col>{{item.taxPercentage}}</ion-col>\\r\\n            </ion-row>\\r\\n          </div>\\r\\n\\r\\n        </ion-grid>\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n\\r\\n  </ion-grid>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GoodsReceiptNotesViewPage } from './goods-receipt-notes-view.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: GoodsReceiptNotesViewPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class GoodsReceiptNotesViewPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { GoodsReceiptNotesViewPageRoutingModule } from './goods-receipt-notes-view-routing.module';\r\n\r\nimport { GoodsReceiptNotesViewPage } from './goods-receipt-notes-view.page';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n \r\n    GoodsReceiptNotesViewPageRoutingModule\r\n  ],\r\n  declarations: [GoodsReceiptNotesViewPage]\r\n})\r\nexport class GoodsReceiptNotesViewPageModule {}\r\n","export default \".my-thin-col {\\n  flex: 0 0 4px;\\n}\\n\\n.container {\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: flex-start;\\n  border: 2px dashed rgba(114, 186, 94, 0.35);\\n  height: 400px;\\n  background: rgba(114, 186, 94, 0.05);\\n}\\n\\n.stick {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9wYWdlcy9nb29kcy1yZWNlaXB0LW5vdGVzLXZpZXcvRDpcXERldmVsb3BtZW50XFxHcmlkXFxtZWRpY3MtZ3JpZC1hcHAvc3JjXFxwYWdlc1xcZ29vZHMtcmVjZWlwdC1ub3Rlcy12aWV3XFxnb29kcy1yZWNlaXB0LW5vdGVzLXZpZXcucGFnZS5zY3NzIiwic3JjL3BhZ2VzL2dvb2RzLXJlY2VpcHQtbm90ZXMtdmlldy9nb29kcy1yZWNlaXB0LW5vdGVzLXZpZXcucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQ0NGOztBRENBO0VBQ0UsYUFBQTtFQUNBLDZCQUFBO0VBQ0EsdUJBQUE7RUFFQSwyQ0FBQTtFQUNBLGFBQUE7RUFDQSxvQ0FBQTtBQ0NGOztBREVBO0VBQ0Usd0JBQUE7RUFDQSxnQkFBQTtFQUNBLE1BQUE7QUNDRiIsImZpbGUiOiJzcmMvcGFnZXMvZ29vZHMtcmVjZWlwdC1ub3Rlcy12aWV3L2dvb2RzLXJlY2VpcHQtbm90ZXMtdmlldy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktdGhpbi1jb2wge1xyXG4gIGZsZXg6IDAgMCA0cHg7XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuXHJcbiAgYm9yZGVyOiAycHggZGFzaGVkIHJnYmEoMTE0LCAxODYsIDk0LCAwLjM1KTtcclxuICBoZWlnaHQ6IDQwMHB4O1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMTE0LCAxODYsIDk0LCAwLjA1KTtcclxufVxyXG5cclxuLnN0aWNrIHtcclxuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICB0b3A6IDA7XHJcbn0iLCIubXktdGhpbi1jb2wge1xuICBmbGV4OiAwIDAgNHB4O1xufVxuXG4uY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBib3JkZXI6IDJweCBkYXNoZWQgcmdiYSgxMTQsIDE4NiwgOTQsIDAuMzUpO1xuICBoZWlnaHQ6IDQwMHB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDExNCwgMTg2LCA5NCwgMC4wNSk7XG59XG5cbi5zdGljayB7XG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { GoodsReceiptNotesPage } from '../goods-receipt-notes/goods-receipt-notes.page';\r\nimport { HttpService } from 'src/services/http/http.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-goods-receipt-notes-view',\r\n  templateUrl: './goods-receipt-notes-view.page.html',\r\n  styleUrls: ['./goods-receipt-notes-view.page.scss'],\r\n})\r\nexport class GoodsReceiptNotesViewPage implements OnInit {\r\n  grn: any = [];\r\n  items: any = [];\r\n\r\n\r\n  constructor(private route: ActivatedRoute, private goodsreceiptnotes: GoodsReceiptNotesPage, private httpService: HttpService) {\r\n    this.items = this.items.map(item => ({\r\n      ...item,\r\n      showMore: false\r\n    }));\r\n   }\r\n\r\n  ngOnInit() {\r\n    // tslint:disable-next-line:no-string-literal\r\n    const id = this.route.snapshot.params['id'];\r\n    // this.grn = this.goodsreceiptnotes.getGrnid(id);\r\n    // console.log(id);\r\n    // console.log(this.grn);\r\n    this.getGrnId(id);\r\n  }\r\n  async getGrnId(id) {\r\n    const url = '/supplier/goodsReceiptNotes/' + id;\r\n    await this.httpService.get(url)\r\n      .then((grn) => {\r\n        if (grn) {\r\n          this.grn = grn[0];\r\n          this.items = grn[0].items;\r\n          console.log(this.grn);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error', error);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n"]}